#include <iostream>

using namespace std;

int N;
int dp[1001];

void input() {
	cin >> N;
}

int main() {

	input();
	dp[0] = 1;
	dp[1] = 1;
	for (int i = 2; i <= N; i++) {
		dp[i] = (dp[i - 1] + dp[i - 2]) % 10007;
	}

	cout << dp[N] << "\n";


	return 0;
}

// 1 : 1 : 1
// 2 : 11 / 2 : 2
// 3 : 111 / 12 / 21 : 3
// 4 : 1111 / 112 / 121 / 211 / 22 : 5
// 5 : 11111 / 1112 / 1121 / 1211 / 2111 / 122 / 212 / 221 : 8
// 6 : 111111 / 11112 / 11121 / 11211 / 12111 / 21111 / 1122 / 1212 / 2112 / 1221 / 2121 / 2211 / 222 : 13

// 위에서 볼 수 있듯이 점화식을 세우면 dp[N] = dp[N - 1] + dp[N -2] 이다.

// 다만 문제에서 N의 범위를 1~1000이고 dp[N]의 10007로 나눈 나머지를 구하는 문제이다. 따라서 10007가지는 0가지로 봐도 무방하다.
// 따라서 진행할때마다 10007로 나눠주면 int로 계산해도 자료형의 범위를 넘어갈 이유가 없다.

// 실행시간 : 0ms