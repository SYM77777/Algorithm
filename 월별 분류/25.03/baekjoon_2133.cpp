#include <iostream>

using namespace std;

int N;
int ans = 0;
int dp[31];

void input() {

	cin >> N;
	dp[0] = 1;
	if (N % 2 == 0) {
		int len = N / 2;
		for (int i = 1; i <= len; i++) {
			for (int j = 1; j <= i; j++) {
				if (j == 1) dp[i] += dp[i - j] * 3;
				else dp[i] += dp[i - j] * 2;
			}
			
		}


		ans = dp[len];
	}
	cout << ans << "\n";

}

int main() {

	input();

	return 0;
}

// 예를 들어 N = 2라고 하자.
// 몫은 1이되고 채울 수 있는 방법은 3가지 --> 가로로 3줄, 세로2개 가로 하나 (가로의 위치가 위, 아래)
// 만약 1줄씩 안하면 2줄 or 3줄씩 묶어야 하는데 이는 2가지 경우가 존재함
// 따라서, 몫이 나올 수 있는 모든 경우의 수를 체크

// 1 : 1 (1)
// 2 : 1 1 / 2 (2) 1 9 + 2
// 3 : 1 1 1 / 1 2 / 2 1 / 3 (4) 2 27 + 6 + 6 + 2
// 4 : 1 1 1 1 / 1 1 2 / 1 2 1 / 2 1 1 / 1 3 / 3 1 / 4 (7) 6 81 + 18 + 18 + 18 + 6+ 6+ 2
// 5 : 1 1 1 1 1 / 1 1 1 1 2 / 1 1 1 2 1 / 1 1 2 1 1 / 1 2 1 1 1 / 2 1 1 1 1 / 1 1 3 / 1 3 1 / 3 1 1 / 1 2 2 / 2 1 2 / 2 2 1 / 1 4 / 4 1 / 2 3 / 3 2 / 5 (17) 16

// 3 9 27 
// 3 11 

// 점화식을 세우면 dp[n] = dp[n - 2] * 3 + dp[n - 4] * 2 ... + dp[0] * 2 이다.

// 실행시간 : 0ms